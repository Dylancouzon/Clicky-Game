{"version":3,"sources":["components/Navbar.js","components/Header.js","components/Card.js","components/CardDeck.js","App.js","index.js"],"names":["Navbar","values","scorestatus","score","className","status","topScore","Header","style","marginTop","Card","image","flagClick","src","maxWidth","onClick","alt","CardDeck","order","map","flag","App","state","clickedFlags","lose","shuffleArray","array","i","length","j","Math","floor","random","setState","includes","this","Component","ReactDOM","render","document","getElementById"],"mappings":"6LAceA,MAZf,YAA2B,IAAVC,EAAS,EAATA,OACTC,EAAc,UAAYD,EAAOE,MACvC,OAAQ,qBAAKC,UAAU,0CAAf,SACR,sBAAKA,UAAU,kBAAf,UACE,sBAAMA,UAAU,uBAAhB,uBACA,sBAAMA,UAAU,uBAAhB,SAAwCH,EAAOE,MAAOD,EAAaD,EAAOI,SAC1E,uBAAMD,UAAU,uBAAhB,wBAAmDH,EAAOK,UAAY,WCK3DC,MAXf,WACI,OACI,qBAAKH,UAAU,4BAA4BI,MAAO,CAACC,UAAU,IAA7D,SACI,sBAAKL,UAAU,YAAf,UACI,oBAAIA,UAAU,YAAd,uBACA,mBAAGA,UAAU,OAAb,4FCIDM,MATf,YAAmC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,UAElB,OAEQ,qBAAKR,UAAU,iBAAiBS,IAAK,kBAAkBF,EAAM,OAAQH,MAAO,CAACM,SAAU,KAAMC,QAAS,kBAAMH,EAAUD,IAAQK,IAAK,aAAcL,GAAYA,ICS1JM,MAbf,YAA8C,IAA3BC,EAA0B,EAA1BA,MAAON,EAAmB,EAAnBA,UAAWJ,EAAQ,EAARA,MACjC,OACI,qBAAKJ,UAAW,kCAAoCI,EAApD,SACKU,EAAMC,KAAI,SAAAC,GAAI,OACX,cAAC,EAAD,CACIT,MAAOS,EACPR,UAAWA,UC+DhBS,E,4MAjEbC,MAAQ,CACNJ,MAAO,GACPK,aAAc,GACdpB,MAAO,EACPG,SAAU,EACVD,OAAQ,2BACRmB,KAAM,I,EASRC,aAAe,WAGb,IAFA,IAAIC,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAEnDC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,KAI3C,EAAKI,SAAS,CAAEf,MAAOQ,K,EAKzBd,UAAY,SAACQ,GACX,EAAKa,SAAS,CAAET,KAAM,KAGlB,EAAKF,MAAMC,aAAaW,SAASd,GACnC,EAAKa,SAAS,CACZ9B,MAAO,EACNE,OAAQ,wBACRkB,aAAc,GACdC,KAAM,qBAKT,EAAKS,SAAS,CACZV,aAAa,GAAD,mBAAM,EAAKD,MAAMC,cAAjB,CAA+BH,IAC3CjB,MAAO,EAAKmB,MAAMnB,MAAQ,IAExB,EAAKmB,MAAMnB,OAAS,EAAKmB,MAAMhB,UACjC,EAAK2B,SAAS,CAAE3B,SAAU,EAAKgB,MAAMhB,SAAW,KAKpD,EAAKmB,gB,uDAzCP,WACEU,KAAKV,iB,oBA2CP,WACE,OACE,gCACE,cAAC,EAAD,CAAQxB,OAAQkC,KAAKb,QACrB,cAAC,EAAD,IACA,cAAC,EAAD,CAAUJ,MAAOiB,KAAKb,MAAMJ,MAAON,UAAWuB,KAAKvB,UAAWJ,MAAO2B,KAAKb,MAAME,c,GA5DtEY,aCDlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.447986af.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar({values}) {\r\n  const scorestatus = \"Score: \" + values.score;\r\n  return (<nav className=\"navbar fixed-top  navbar-light bg-light\">\r\n  <div className=\"container-fluid\">\r\n    <span className=\"navbar-brand mb-0 h1\">Flag Game</span>\r\n    <span className=\"navbar-brand mb-0 h1\">{values.score? scorestatus: values.status}</span>\r\n    <span className=\"navbar-brand mb-0 h1\">Top-score: {values.topScore || 0}</span>\r\n  </div>\r\n</nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\" style={{marginTop:50}}>\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">Flag Game</h1>\r\n                <p className=\"lead\">Click on an image to earn points, but don't click on any more than once!</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Card({image, flagClick}) {\r\n    //Todo: Add key && Unique ID, bootstrap styling\r\n    return (\r\n      \r\n            <img className=\"max-vh-10 card\" src={\"./images/flags/\"+image+\".gif\"} style={{maxWidth: 300} }onClick={() => flagClick(image)} alt={\"Flag Card \"+ image} key={image} />\r\n      \r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from \"./Card\";\r\nfunction CardDeck({order, flagClick, style}) {\r\n    return (\r\n        <div className={\"card-columns animate__animated \" + style} >\r\n            {order.map(flag => (\r\n                <Card\r\n                    image={flag}\r\n                    flagClick={flagClick}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardDeck;","import React, { Component } from 'react';\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport CardDeck from \"./components/CardDeck\";\n\nclass App extends Component {\n  state = {\n    order: [],\n    clickedFlags: [],\n    score: 0,\n    topScore: 0,\n    status: 'Click an image to start!',\n    lose: ''\n  };\n\n  // Shuffle the images on page load\n  componentDidMount() {\n    this.shuffleArray();\n  }\n\n    //Shuffle the images, each number match an image ID\n  shuffleArray = () => {\n    let array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    this.setState({ order: array })\n\n  }\n\n  // Function executed each time the User click on an image.\n  flagClick = (flag) => {\n    this.setState({ lose: '' });\n\n    // If the user has already clicked on that image, the game is lost.\n    if (this.state.clickedFlags.includes(flag)) {\n      this.setState({ \n        score: 0,\n         status: 'You lost! Play Again!',\n         clickedFlags: [],\n         lose: 'animate__wobble'\n         })\n\n    } else {\n      //Increment score and High score\n      this.setState({\n        clickedFlags: [...this.state.clickedFlags, flag],\n        score: this.state.score + 1,\n      });\n      if (this.state.score >= this.state.topScore) {\n        this.setState({ topScore: this.state.topScore + 1 })\n      }\n\n    }\n    //Shuffle the images again\n    this.shuffleArray();\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar values={this.state} />\n        <Header />\n        <CardDeck order={this.state.order} flagClick={this.flagClick} style={this.state.lose} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}